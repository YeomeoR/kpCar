main carousel container
lr buttonscar button button_button--left and --right
car_track-container
carousel_track 
li carousel_slide

1 btn with class curr_slide


.carousel_image {
w100%
h100%
obj-fit:cov
}
.carousel_track-container {
bg: green;
h100%
pos:rel
oh
}
.carousel_track{
p0;
m0;
list-style:none
pos rel
h100%
transistion: transform 250ms easein
}

.carousel_slide {
pos:abs
top0
bot0
w100%
}

.carousel_button--left {
left:-50px;
cursor:pointer
}

.carousel_button--right {
right:-40px;
}

.carousel_button {
pos:abs;
top:50%;
trans:transY(-50%);
bg:trans;
border:0;

}

.carousel_button img {
w12;
}
.carousel_nav {
bg:pink
disp:flex
jc:center
p10px 0
m0 12px
}

carousel_indicator {
border:0
border_rad: 50%
w15
h15
bg:rgba 0,0,0,0.3
cursor: pointer
}

.carousel_indicator.curr_slide {
bg:rgba:0,0,0,0.75
}

***********************

JS

var track = select .carousel_track;
var slides =  Array.from(track.children); check console
cl(track)
// click left to move left
var nextBtn = select .carousel_button-left;
var prevBtn = select .carousel_button-right;
var dotsNav = select .carousel_nav;
var dots = Array.from(dotsNav.children)

var slideWidth = slides[0].getBoundingClientRect().width;
cl(slideWidth)
// arrange slide next ot each other
//slides[0].style.left = slideWidth * 0 + 'px';
//slides[1].style.left = slideWidth * 1 + 'px';
//slides[2]/style.left = slideWidth * 2 + 'px;

// create for loop to do above

var setSlidePos = (slide, index) => {
slide.style.left = slideWidth * index + 'px';
}
slides.forEach(setSlidePos);
*********
OR
*********
slides.forEach((slide, index), function() {
slide.style.left = slideWidth * index + 'px';
});

function moveToSlide(track, currentSlide, targetSlide) {
track.style.transform = 'translateX(-' + targetSlide.style.left + ')'
currentSlide.classList.remove('current-slide')
targetSlide.classList.add('current-slide')
}

function updateDots(currentDot, targetDot) {
currentDot.classList.remove('current-slide');
targetDot.clsasList.add('current-slide');}

// this might be redundant if func move
// add currentSlide on element in html
nextButton.click.function(e) { // but jQuery
 var currentSlide = track.select('.curr-slide')
cl(currSlide.nextElementSibling)
var prevSlide = currSlide.nextElementSibling;
// move to the next slide
var currentDot = dotsNav.qS('.current-slide
var nextDot = ciurrentDot.nextElementSibling;

moveToSlide(track, currentSlide, nextSlideSlide )
updateDots(currentDot, nextDot);
}
// move to previous slide

prevButton.click.function(e ) {
var currentSlide = track.select('.current-slide')
cl(currSlide.nextElementSibling)
var prevSlide = currSlide.previousElementSibling;
var currentDot = dotsNav.qS('.curretn-slide
var prevDot = ciurrentDot.previousEWlementSibling;

moveToSlide(track, currentSlide, prevSlideSlide )
updateDots(curretnDot, prevDot);
moveToslide(track, currentSlide, prevSlide)

}


// dotsnav

dotsNav.click. function(e) {
var targetDot = e.target.closest('button'); // navDots are buttons
if(!targetDot) return;

var currentSlide = track.qS('.current-slide');
var currentDot = dotsNav.qS('.curretn-slide');
var targetIndex = dots.findIndex(dot, function() {return dot === targetDot})	//like a for loop
var targetSlide = slides[targetIndex];

moveToSlide(track, currentSlide, targetSlide)

updateDots(curretnDot, targetDot);
}//)


